// <auto-generated />
using System;
using FastFoodOperator.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastFoodOperator.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComboComboGroup", b =>
                {
                    b.Property<int>("ComboGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("CombosId")
                        .HasColumnType("int");

                    b.HasKey("ComboGroupsId", "CombosId");

                    b.HasIndex("CombosId");

                    b.ToTable("ComboGroupCombo", (string)null);
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Burgers"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sides"
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainComboProductId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Combos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 24.99m,
                            MainComboProductId = 1,
                            Name = "Cheeseburger Combo"
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 29.99m,
                            MainComboProductId = 2,
                            Name = "BigMac Combo"
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.ComboGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DefaultComboProductId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DefaultComboProductId");

                    b.ToTable("ComboGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sides"
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.ComboProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComboGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultVariantId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboGroupId");

                    b.HasIndex("ComboId");

                    b.HasIndex("DefaultVariantId");

                    b.HasIndex("ProductId");

                    b.ToTable("ComboProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComboId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ComboId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            ComboGroupId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            ComboGroupId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            ComboGroupId = 2,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            ComboGroupId = 2,
                            ProductId = 6
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PriceModifier")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lettuce",
                            PriceModifier = 0.50m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tomato",
                            PriceModifier = 0.50m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pickles",
                            PriceModifier = 0.25m
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<bool>("OrderStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompletedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CustomerNote = "5kg extra onion",
                            OrderNumber = 1001,
                            OrderStatus = true
                        },
                        new
                        {
                            Id = 2,
                            CompletedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 1, 2, 12, 0, 0, 0, DateTimeKind.Utc),
                            CustomerNote = "no peanuts",
                            OrderNumber = 1002,
                            OrderStatus = false
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.OrderCombo", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ComboId");

                    b.HasIndex("ComboId");

                    b.ToTable("OrderCombos");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ComboId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 2,
                            ComboId = 2,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 3,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultVariantId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 14.99m,
                            CategoryId = 1,
                            Description = "A classic cheeseburger",
                            Name = "Cheeseburger"
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 29.99m,
                            CategoryId = 1,
                            Description = "A classic big mac",
                            Name = "Big Mac"
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 1.99m,
                            CategoryId = 2,
                            Description = "Refreshing soda",
                            Name = "Coke"
                        },
                        new
                        {
                            Id = 4,
                            BasePrice = 1.99m,
                            CategoryId = 2,
                            Description = "Refreshing soda",
                            Name = "Pepsi"
                        },
                        new
                        {
                            Id = 5,
                            BasePrice = 2.99m,
                            CategoryId = 3,
                            Description = "Crispy golden fries",
                            Name = "French Fries"
                        },
                        new
                        {
                            Id = 6,
                            BasePrice = 2.99m,
                            CategoryId = 3,
                            Description = "Crispy nuggies",
                            Name = "Chicken Nuggets"
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.ProductIngredient", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.HasKey("ProductId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("ProductIngredients");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            IngredientId = 1,
                            Required = true
                        },
                        new
                        {
                            ProductId = 1,
                            IngredientId = 2,
                            Required = false
                        },
                        new
                        {
                            ProductId = 2,
                            IngredientId = 1,
                            Required = true
                        },
                        new
                        {
                            ProductId = 2,
                            IngredientId = 2,
                            Required = false
                        },
                        new
                        {
                            ProductId = 2,
                            IngredientId = 3,
                            Required = false
                        });
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PriceModifier")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Small",
                            PriceModifier = 0m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medium",
                            PriceModifier = 4.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Large",
                            PriceModifier = 9.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Small",
                            PriceModifier = 0m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Medium",
                            PriceModifier = 4.99m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 6,
                            Name = "Large",
                            PriceModifier = 9.99m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 7,
                            Name = "Small",
                            PriceModifier = 0m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 8,
                            Name = "Medium",
                            PriceModifier = 4.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Large",
                            PriceModifier = 9.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "6",
                            PriceModifier = 0m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 11,
                            Name = "8",
                            PriceModifier = 4.99m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 12,
                            Name = "10",
                            PriceModifier = 9.99m,
                            ProductId = 6
                        });
                });

            modelBuilder.Entity("ComboComboGroup", b =>
                {
                    b.HasOne("FastFoodOperator.Api.Entities.ComboGroup", null)
                        .WithMany()
                        .HasForeignKey("ComboGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastFoodOperator.Api.Entities.Combo", null)
                        .WithMany()
                        .HasForeignKey("CombosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.ComboGroup", b =>
                {
                    b.HasOne("FastFoodOperator.Api.Entities.ComboProduct", "DefaultComboProduct")
                        .WithMany()
                        .HasForeignKey("DefaultComboProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DefaultComboProduct");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.ComboProduct", b =>
                {
                    b.HasOne("FastFoodOperator.Api.Entities.ComboGroup", "ComboGroup")
                        .WithMany("ComboProducts")
                        .HasForeignKey("ComboGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FastFoodOperator.Api.Entities.Combo", "Combo")
                        .WithMany("ComboProducts")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FastFoodOperator.Api.Entities.ProductVariant", "DefaultProductVariant")
                        .WithMany()
                        .HasForeignKey("DefaultVariantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FastFoodOperator.Api.Entities.Product", "Product")
                        .WithMany("ComboProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("ComboGroup");

                    b.Navigation("DefaultProductVariant");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.OrderCombo", b =>
                {
                    b.HasOne("FastFoodOperator.Api.Entities.Combo", "Combo")
                        .WithMany()
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastFoodOperator.Api.Entities.Order", "Order")
                        .WithMany("OrderCombos")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.OrderProduct", b =>
                {
                    b.HasOne("FastFoodOperator.Api.Entities.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastFoodOperator.Api.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Product", b =>
                {
                    b.HasOne("FastFoodOperator.Api.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.ProductIngredient", b =>
                {
                    b.HasOne("FastFoodOperator.Api.Entities.Ingredient", "Ingredient")
                        .WithMany("ProductIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastFoodOperator.Api.Entities.Product", "Product")
                        .WithMany("ProductIngredients")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.ProductVariant", b =>
                {
                    b.HasOne("FastFoodOperator.Api.Entities.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Combo", b =>
                {
                    b.Navigation("ComboProducts");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.ComboGroup", b =>
                {
                    b.Navigation("ComboProducts");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Ingredient", b =>
                {
                    b.Navigation("ProductIngredients");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Order", b =>
                {
                    b.Navigation("OrderCombos");

                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("FastFoodOperator.Api.Entities.Product", b =>
                {
                    b.Navigation("ComboProducts");

                    b.Navigation("ProductIngredients");

                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
